version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      #- $(aws ecr get-login --region ap-southeast-2 --no-include-email)
#      - 登录到 Amazon ECR
      - aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 583203541818.dkr.ecr.ap-southeast-2.amazonaws.com
      - # Replace with this to your repository URI
#        - 设置 Amazon ECR repository URI
      - REPOSITORY_URI=583203541818.dkr.ecr.ap-southeast-2.amazonaws.com/spring-demo-ecr
#      - 设置 tag for the image
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean install
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo pushing to repo
#      - 将镜像推送到 Amazon ECR
      - docker push $REPOSITORY_URI:latest
#      - 将镜像带标签二次推送到 Amazon ECR
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # Give your container name
#      - 设置我们的镜像名称
      - DOCKER_CONTAINER_NAME=spring-demo-ecr
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - target/springboot-aws-deploy.jar